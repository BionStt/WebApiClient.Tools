@inherits HtmlTemplateBase<HttpApi>

@using WebApiClient.Tools.Swagger
@using RazorEngine.Templating

<div>[HttpHost("@(Model.BaseUrl)")]</div>
<div>public interface I@(Model.Class)Api : IHttpApi</div>
<div>{</div>
@foreach (var operation in Model.Operations)
{
    if (operation.HasSummary == true)
    {
        <div>/// &lt;summary&gt;</div>
        foreach (var line in operation.Summary.Split(new[] { "\r", "\n" }, StringSplitOptions.RemoveEmptyEntries))
        {
            <div>/// @line</div>
        }
        <div>/// &lt;/summary&gt;</div>
    }
    foreach (var parameter in operation.Parameters)
    {
        if (parameter.HasDescription == true)
        {
            <div>/// &lt;param name="@(parameter.VariableName)"&gt;@(parameter.Description.Replace("\r", "\t").Replace("\n", "\t"))&lt;/param&gt;</div>
        }
    }
    if (operation.HasResultDescription == true)
    {
        <div>/// &lt;returns&gt;@(operation.ResultDescription)&lt;/returns&gt;</div>
    }

    <div>[Http@(operation.HttpMethodUpper)("@(operation.Path)")]</div>

    <div>
        <span>@(operation.ResultType)</span>
        <span>@(operation.ActualOperationName)Async(</span>
        @foreach (var parameter in operation.Parameters)
        {
            if (parameter.IsRequired == true)
            {
                <span>[Required]</span>
            }

            if (parameter.IsXmlBodyParameter == true)
            {
                <span>[XmlContent]</span>
            }
            else if (parameter.IsBody == true)
            {
                <span>[JsonContent]</span>
            }

            <span>@(parameter.TypeInControllerInterface)</span>
            <span>@(parameter.VariableName)@(parameter.IsLast ? null : ",") </span>
        }
        <span>);</span>
    </div>
}
<div>}</div>
